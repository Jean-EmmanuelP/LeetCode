Step of the algorithm:

1. Create an empty stack, st
2. Do following for every character x from left to right
3. If x is:
	- Operand -> Output it
	- Left Parenthesis : Push to st
	- Right Parenthesis : Pop from st until left Parenthesis is found. Output the popped operators.
	- Operator : If st is empty push x to st.
		-> if st is empty, push x to st, else compare with st top.
		--> Higher precedence (that st top), push to st
		--> Lower precedence, pop st top and output until a higher precedence operator is found.
		Then push s to st.
		--> Equal precedence, use assocativity.
4. Pop and Output everything from st.